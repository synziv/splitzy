[{"C:\\Users\\Admin\\Documents\\splitzy\\src\\index.tsx":"1","C:\\Users\\Admin\\Documents\\splitzy\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Documents\\splitzy\\src\\App.tsx":"3","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\Home.tsx":"4","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\auth\\Login.tsx":"5","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\auth\\AuthProvider.tsx":"6","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\itemList\\ItemList.tsx":"7","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\store\\index.js":"8","C:\\Users\\Admin\\Documents\\splitzy\\src\\utils\\firebase.ts":"9","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\actions\\auth.actions.ts":"10","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\actions\\user.actions.ts":"11","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\actions\\items.actions.ts":"12","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\itemList\\AddItemDialog.tsx":"13","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\itemList\\Item.tsx":"14","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\itemList\\TotalPrice.tsx":"15","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\groupList\\GroupList.tsx":"16","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\reducers\\index.ts":"17","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\constants\\user.constants.ts":"18","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\constants\\items.constants.ts":"19","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\constants\\auth.constants.ts":"20","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\itemList\\OwingUserForList.tsx":"21","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\itemList\\UserForList.tsx":"22","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\groupList\\AddGroupDialog.tsx":"23","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\groupList\\Group.tsx":"24","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\reducers\\userInGroup.reducer.ts":"25","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\reducers\\items.reducer.ts":"26","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\reducers\\connectedUser.reducer.ts":"27","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\actions\\group.actions.ts":"28","C:\\Users\\Admin\\Documents\\splitzy\\src\\entity\\user.ts":"29","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\constants\\group.constants.ts":"30"},{"size":500,"mtime":1612301195975,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":1183,"mtime":1615073833794,"results":"34","hashOfConfig":"32"},{"size":1686,"mtime":1615073833798,"results":"35","hashOfConfig":"32"},{"size":1556,"mtime":1615073833795,"results":"36","hashOfConfig":"32"},{"size":1413,"mtime":1615073833795,"results":"37","hashOfConfig":"32"},{"size":2300,"mtime":1615078859513,"results":"38","hashOfConfig":"32"},{"size":744,"mtime":1612301314669,"results":"39","hashOfConfig":"32"},{"size":776,"mtime":1612301340276,"results":"40","hashOfConfig":"32"},{"size":1095,"mtime":1615074353425,"results":"41","hashOfConfig":"32"},{"size":2064,"mtime":1615078461410,"results":"42","hashOfConfig":"32"},{"size":2974,"mtime":1615076492100,"results":"43","hashOfConfig":"32"},{"size":5720,"mtime":1615073833798,"results":"44","hashOfConfig":"32"},{"size":2005,"mtime":1615078844520,"results":"45","hashOfConfig":"32"},{"size":1258,"mtime":1615073833803,"results":"46","hashOfConfig":"32"},{"size":1560,"mtime":1615073833797,"results":"47","hashOfConfig":"32"},{"size":918,"mtime":1612626382704,"results":"48","hashOfConfig":"32"},{"size":414,"mtime":1612301314662,"results":"49","hashOfConfig":"32"},{"size":450,"mtime":1612301314661,"results":"50","hashOfConfig":"32"},{"size":144,"mtime":1612301314659,"results":"51","hashOfConfig":"32"},{"size":853,"mtime":1615073833802,"results":"52","hashOfConfig":"32"},{"size":1048,"mtime":1615073833804,"results":"53","hashOfConfig":"32"},{"size":2048,"mtime":1615073833796,"results":"54","hashOfConfig":"32"},{"size":1629,"mtime":1615073833796,"results":"55","hashOfConfig":"32"},{"size":1279,"mtime":1612625764083,"results":"56","hashOfConfig":"32"},{"size":1015,"mtime":1612566624417,"results":"57","hashOfConfig":"32"},{"size":1426,"mtime":1612567041490,"results":"58","hashOfConfig":"32"},{"size":1193,"mtime":1612564904351,"results":"59","hashOfConfig":"32"},{"size":666,"mtime":1612626009280,"results":"60","hashOfConfig":"32"},{"size":173,"mtime":1612301314660,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"23p02t",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\Admin\\Documents\\splitzy\\src\\index.tsx",[],["138","139"],"C:\\Users\\Admin\\Documents\\splitzy\\src\\reportWebVitals.js",[],["140","141"],"C:\\Users\\Admin\\Documents\\splitzy\\src\\App.tsx",["142","143"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport AuthProvider from './components/auth/AuthProvider';\r\nimport store from './redux/store';\r\nimport Home from './components/Home';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport ItemList from './components/itemList/ItemList';\r\nimport Login from './components/auth/Login';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <Provider store={store}>\r\n            <AuthProvider>\r\n              <div className=\"container\">\r\n                <Switch>\r\n                  <Route path=\"/items/:id\">\r\n                    <ItemList />\r\n                  </Route>\r\n                  <Route path=\"/auth\">\r\n                    <Login />\r\n                  </Route>\r\n                  <Route path=\"/\">\r\n                    <Home />\r\n                  </Route>\r\n                </Switch>\r\n              </div>\r\n            </AuthProvider>\r\n          </Provider>\r\n        </header>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\Home.tsx",["144","145","146","147","148"],"import ItemList from \"./itemList/ItemList\"\r\nimport Login from \"./auth/Login\"\r\nimport { useAuth } from \"./auth/AuthProvider\"\r\n// /pages/authenticated.tsx\r\nimport React from 'react';\r\nimport GroupList from \"./groupList/GroupList\";\r\nimport { firebaseInstance } from \"../utils/firebase\";\r\nimport { State } from \"../redux/reducers\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {isEmpty} from 'lodash';\r\nimport { getConnectedUser } from \"../redux/actions/user.actions\";\r\nimport { IConnectedUserState } from \"../redux/reducers/connectedUser.reducer\";\r\n\r\nconst Home =()=>{\r\n    const dispatch = useDispatch();\r\n    const userCookie = useAuth();\r\n    const connectedUser: IConnectedUserState = useSelector((state:State)=> state.connectedUser);\r\n    const loggedIn = ()=>{\r\n        if(connectedUser.value.id!=\"\"){\r\n            console.log(userCookie.user);\r\n            console.log(connectedUser)\r\n            console.log(isEmpty(connectedUser.value));\r\n            /*if(isEmpty(connectedUser.value) && connectedUser.requestState!='requesting'){\r\n                if(firebaseInstance.auth().currentUser == null)\r\n                    firebaseInstance.auth().signOut();\r\n                userCookie.user.getIdToken().then((token)=>{\r\n                    dispatch(getConnectedUser(token));\r\n                });\r\n            }*/\r\n            return(\r\n                <GroupList/>\r\n            )\r\n        }\r\n            \r\n        else{\r\n            //firebaseInstance.auth().signOut();\r\n            return(\r\n                <Login/>\r\n            )\r\n        }\r\n            \r\n    }\r\n    return (\r\n        <div>\r\n            {loggedIn()}\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\auth\\Login.tsx",["149","150","151"],"import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport { firebaseInstance } from '../../utils/firebase';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../redux/actions/auth.actions';\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch();\r\n    const provider = new firebaseInstance.auth.FacebookAuthProvider();\r\n    \r\n    const facebookAuth = () => {\r\n        firebaseInstance.auth().signInWithRedirect(provider);\r\n    }\r\n\r\n    firebaseInstance.auth()\r\n                .getRedirectResult()\r\n                .then((result) => {\r\n                    if (result.credential)\r\n                        dispatch(login(result.credential));\r\n                    \r\n                }).catch((error) => {\r\n                    // Handle Errors here.\r\n                    var errorCode = error.code;\r\n                    var errorMessage = error.message;\r\n                    // The email of the user's account used.\r\n                    var email = error.email;\r\n                    // The firebase.auth.AuthCredential type that was used.\r\n                    var credential = error.credential;\r\n                    // ...\r\n                    console.log(errorCode)\r\n                });\r\n    return (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            startIcon={<FacebookIcon />}\r\n            onClick={facebookAuth}\r\n        >Login !</Button>\r\n        \r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\auth\\AuthProvider.tsx",["152","153"],"import { createContext, useState, useEffect, useContext } from 'react';\r\nimport 'firebase/auth';\r\nimport firebase from 'firebase/app';\r\nimport nookies from 'nookies';\r\n\r\nconst AuthContext = createContext<{ user: firebase.User | null }>({\r\n  user: null,\r\n});\r\n\r\nfunction AuthProvider({ children }: any) {\r\n   const [user, setUser] = useState<firebase.User | null>(null);\r\n\r\n  /*useEffect(() => {\r\n    return firebase.auth().onIdTokenChanged((firebaseUser) => {\r\n      console.log('*************connected user');\r\n      console.log('*************firebase user');\r\n      console.log(user);\r\n      if (!firebaseUser) {\r\n        setUser(null);\r\n        nookies.set(undefined, 'token', '');\r\n      } else {\r\n        firebaseUser.getIdToken().then((token)=>{\r\n          setUser(firebaseUser);\r\n          nookies.set(undefined, 'token', token);\r\n        });\r\n      }\r\n    });\r\n  }, []);*/\r\n\r\n   // force refresh the token every 10 minutes\r\n   useEffect(() => {\r\n     const handle = setInterval(async () => {\r\n       const user = firebase.auth().currentUser;\r\n       if (user) await user.getIdToken(true);\r\n     }, 10 * 60 * 1000);\r\n\r\n     // clean up setInterval\r\n     return () => clearInterval(handle);\r\n   }, []);\r\n\r\n   return (\r\n     <AuthContext.Provider value={{ user }}>{children}</AuthContext.Provider>\r\n   );\r\n}\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\nexport default AuthProvider;","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\itemList\\ItemList.tsx",["154","155","156"],"C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\store\\index.js",[],"C:\\Users\\Admin\\Documents\\splitzy\\src\\utils\\firebase.ts",[],"C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\actions\\auth.actions.ts",[],"C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\actions\\user.actions.ts",[],"C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\actions\\items.actions.ts",["157"],"import { itemsConstants } from \"../constants/items.constants\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { getUsersInGroup } from \"./user.actions\";\r\nimport { IItem } from \"../../entity/item\";\r\nconst axios = require('axios').default;\r\nexport const getItems = (groupId: string)=>{\r\n    \r\n    const request = () => ({ type: itemsConstants.GET_ITEMS_REQUEST });\r\n    const success = (items: any) => {\r\n        return{\r\n          type: itemsConstants.GET_ITEMS_SUCCESS,\r\n          payload: items,\r\n        }\r\n    }\r\n    const failure = (response: any) => {\r\n        return{\r\n          type: itemsConstants.GET_ITEMS_FAILURE,\r\n          errors: response,\r\n        }\r\n    };\r\n\r\n    const requestURL = '/api/item';\r\n\r\n    return async (dispatch: any) => {\r\n        dispatch(request());\r\n        await axios.get(requestURL, {\r\n            params:{\r\n                groupId: groupId\r\n            }\r\n        })\r\n        .then((res:any) => {\r\n            dispatch(success(res.data));\r\n        })\r\n        .catch((res: any) => {\r\n            dispatch(failure(res))\r\n        });\r\n    }\r\n}\r\nexport const addItem =(item: IItem) =>{\r\n    const request = () => ({ type: itemsConstants.ADD_ITEM_REQUEST });\r\n\r\n    const success = (data: any) => {\r\n        return{\r\n          type: itemsConstants.ADD_ITEM_SUCCESS,\r\n          payload: data,\r\n        }\r\n    }\r\n    const failure = (response: any) => {\r\n        return{\r\n          type: itemsConstants.ADD_ITEM_FAILURE,\r\n          errors: response,\r\n        }\r\n    };\r\n\r\n    const requestURL = '/api/item';\r\n\r\n    return async (dispatch: any) => {\r\n        dispatch(request());\r\n        return await axios.post(requestURL, item)\r\n            .then((res: any) => {\r\n                dispatch(success(res));\r\n                dispatch(getUsersInGroup(item.groupId));\r\n                dispatch(getItems(item.groupId));\r\n            })\r\n            .catch((res: any) =>{ \r\n                dispatch(failure(res))\r\n            });\r\n    }\r\n}\r\nexport const deleteItem =(item: IItem) =>{\r\n    const request = () => ({ type: itemsConstants.DELETE_ITEM_REQUEST });\r\n\r\n    const success = (data: any) => {\r\n        return{\r\n          type: itemsConstants.DELETE_ITEM_SUCCESS,\r\n          payload: data,\r\n        }\r\n    }\r\n    const failure = (response: any) => {\r\n        return{\r\n          type: itemsConstants.DELETE_ITEM_FAILURE,\r\n          errors: response,\r\n        }\r\n    };\r\n\r\n    const requestURL = '/api/item';\r\n\r\n    return async (dispatch: any) => {\r\n        dispatch(request());\r\n        return await axios({\r\n            method: 'delete',\r\n            url: requestURL,\r\n            data: {\r\n                id: item.id\r\n            }\r\n        })\r\n            .then((res: any) => {\r\n                dispatch(success(res));\r\n                dispatch(getUsersInGroup(item.groupId));\r\n                //dispatch(getItems());\r\n            })\r\n            .catch((res: any) =>{ \r\n                dispatch(failure(res))\r\n            });\r\n    }\r\n}","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\itemList\\AddItemDialog.tsx",["158","159","160","161","162","163","164","165","166"],"import React, { ChangeEvent } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Select, List } from '@material-ui/core';\r\nimport UserForList from './UserForList';\r\nimport { addItem } from '../../redux/actions/items.actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { State } from '../../redux/reducers';\r\nimport { IUser } from '../../entity/user';\r\nimport { IUserInGroup } from '../../redux/reducers/userInGroup.reducer';\r\n\r\ninterface IAddItemDialogProps{\r\n  open : boolean;\r\n  handleClose: ()=>void;\r\n  groupdId: string;\r\n}\r\n\r\nexport default function AddItemDialog(props: IAddItemDialogProps) {\r\n  const usersInGroup: IUserInGroup[] = useSelector((state: State) =>state.userInGroup === undefined ? [] :state.userInGroup.values );\r\n  const connectedUser: IUser = useSelector((state:State)=> state.connectedUser.value);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = React.useState('');\r\n  const [total, setTotal] = React.useState(0);\r\n  const [splitMode, setSplitMode] = React.useState('all');\r\n  const [customSplitMode, setCustomSplitMode] = React.useState('even');\r\n  const [splitWith, setsplitWith] = React.useState<string[]>([]);\r\n\r\n\r\n  const generateSplitWith =(): string[]=>{\r\n    let nextSplitWith:string[]=[];\r\n      usersInGroup.forEach(user=> {\r\n        //modifier pour connected user\r\n        if(user.id!= connectedUser.id)\r\n          nextSplitWith.push(user.id)\r\n      });\r\n    return nextSplitWith;\r\n  }\r\n  const handleNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.target.value);\r\n  }\r\n  const handleTotalChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    try {\r\n      setTotal(Number(e.target.value))\r\n    }\r\n    catch{ }\r\n  }\r\n  const handleSplitModeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSplitMode(e.target.value);\r\n    if(e.target.value == 'all')\r\n      setsplitWith(generateSplitWith());\r\n  }\r\n  \r\n  const handleCustomSplitModeChange = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n      setCustomSplitMode(e.target.value);\r\n  }\r\n  const close = () => {\r\n    setName('');\r\n    setTotal(0);\r\n    props.handleClose();\r\n  }\r\n  const save = () => {\r\n    const splitModeToSave = splitMode == 'all' ? splitMode : customSplitMode;\r\n    const groupId = 1;\r\n    //name, total, userId, splitModeToSave, splitWith,\r\n    console.log(props);\r\n    dispatch(addItem({\r\n      name: name,\r\n      id: '',\r\n      total: total,\r\n      splitMode: splitModeToSave,\r\n      splitWith: splitModeToSave =='all'? generateSplitWith() : splitWith,\r\n      user: connectedUser.id,\r\n      groupId: props.groupdId\r\n    }));\r\n    close();\r\n  }\r\n  //changer avec connected user\r\n  const generateUserInGroup = () =>\r\n      usersInGroup.map((user, index) => {\r\n        if(user.id!=connectedUser.id ){\r\n          let checked = splitWith.includes(user.id) ? true : false;\r\n          return <UserForList user={user} index={index} checked={checked} handleToggle={handleToggleUser} />\r\n        }\r\n    });\r\n  const handleToggleUser = (userId: string) => {\r\n    let temp = splitWith;\r\n    if (splitWith.includes(userId)) {\r\n      const index = splitWith.findIndex(exceptUserId => exceptUserId == userId);\r\n      temp.splice(index, 1);\r\n    }\r\n    else\r\n      temp.push(userId);\r\n    setsplitWith([...temp]);\r\n  }\r\n  const customChoices = () => {\r\n    if (splitMode != 'all') {\r\n      return (\r\n        <div>\r\n          <List dense>\r\n            {generateUserInGroup()}\r\n          </List>\r\n          <Select\r\n            native\r\n            value={customSplitMode}\r\n            onChange={()=>handleCustomSplitModeChange}\r\n          >\r\n            <option aria-label=\"even\" value=\"even\">Even</option>\r\n            <option value={1/3}>1/3</option>\r\n            <option value={2/3}>2/3</option>\r\n            <option value={1/4}>1/4</option>\r\n            <option value={3/4}>3/4</option>\r\n          </Select>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Add an item</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To add an item enter the name and the total price you paid it\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Name of the item\"\r\n            value={name}\r\n            fullWidth\r\n            onChange={handleNameChange}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"total\"\r\n            label=\"Total price of the item\"\r\n            value={total}\r\n            fullWidth\r\n            onChange={handleTotalChange}\r\n          />\r\n          <Select\r\n            native\r\n            value={splitMode}\r\n            onChange={()=>handleSplitModeChange}\r\n          >\r\n            <option aria-label=\"All\" value=\"all\">All</option>\r\n            <option value=\"custom\">Custom</option>\r\n          </Select>\r\n          {customChoices()}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={close} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={save} color=\"primary\">\r\n            Add item\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\itemList\\Item.tsx",["167","168","169","170"],"import React from 'react';\r\nimport {ListItem, ListItemText, ListItemSecondaryAction, Checkbox, IconButton, ListItemAvatar, Avatar} from '@material-ui/core';\r\nimport {Delete} from '@material-ui/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteItem } from '../../redux/actions/items.actions';\r\nimport { State } from '../../redux/reducers';\r\nimport { connectedUser } from '../../redux/reducers/connectedUser.reducer';\r\nimport { IItem } from '../../entity/item';\r\n\r\ninterface IItemProps {\r\n    item: IItem\r\n    index: number\r\n}\r\n\r\nconst ItemForList = (props: IItemProps) => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state:State)=>state.userInGroup.values.find(user=> user.id == props.item.user));\r\n    const connectedUser = useSelector((state:State)=>state.connectedUser.value);\r\n    const handleDeleteItem =()=>{\r\n        dispatch(deleteItem(props.item));\r\n    }\r\n    const deleteIcon =()=>{\r\n        if(connectedUser.id == props.item.user){\r\n            return(\r\n                <ListItemSecondaryAction>\r\n                    <IconButton aria-label=\"delete\" onClick={handleDeleteItem}>\r\n                        <Delete fontSize=\"small\" />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            )\r\n        }\r\n        return null\r\n    }\r\n    if(user){\r\n        return (\r\n            <ListItem key={props.index} button>\r\n                <ListItemAvatar>\r\n                <Avatar\r\n                    alt={`Avatar color`}\r\n                    src={`/img/${user.color}.jpg`}\r\n                />\r\n                </ListItemAvatar>\r\n                <ListItemText primary={props.item.name} secondary={props.item.total} />\r\n                {deleteIcon()}\r\n            </ListItem>\r\n        )\r\n    }\r\n    return null;\r\n} \r\n\r\nexport default ItemForList;\r\n\r\n/*<Checkbox\r\n    edge=\"end\"\r\n    onChange={/*handleToggle(value)}\r\n    checked={checked.indexOf(value) !== -1}\r\n    inputProps={{ 'aria-labelledby': labelId }}\r\n/>*/","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\itemList\\TotalPrice.tsx",["171","172","173"],"import React from 'react';\r\nimport OwingUserForList from './OwingUserForList';\r\nimport { List } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { State } from '../../redux/reducers';\r\n\r\nconst GenerateUserInGroup = (connectedUser: string) =>{\r\n    const userInGroup = useSelector((state:State)=>state.userInGroup.values);\r\n    if(userInGroup && userInGroup.length > 0){\r\n        const connectedUserTemp = userInGroup.find(user => user.id == connectedUser);\r\n        if (connectedUserTemp) {\r\n            return connectedUserTemp.owingArr.map((value, index) => {\r\n                const owingUser = userInGroup.find(user => user.id == value.user);\r\n                if(owingUser){\r\n                    const valueForChild = { user: owingUser, owing: value.owing };\r\n                    return <OwingUserForList value={valueForChild} index={index} />\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n    \r\n    \r\n    \r\n    \r\nconst TotalPrice = () => {\r\n    return (\r\n        <List dense>\r\n            <h1>Alexis</h1>\r\n            {GenerateUserInGroup('-MS3Vc-PX4CZzmfVi9hO')}\r\n            <h1>Beatrice</h1>\r\n            {GenerateUserInGroup('-MS3VYXs7TTA5oSadrcA')}\r\n        </List>\r\n    )\r\n} \r\n\r\nexport default TotalPrice;","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\groupList\\GroupList.tsx",["174","175","176","177","178","179"],"import React, { useEffect, Props } from 'react';\r\nimport { Fab, List, Button } from '@material-ui/core';\r\nimport {Add} from '@material-ui/icons';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport nookies from 'nookies';\r\nimport AddGroupDialog from './AddGroupDialog';\r\nimport { isUndefined } from 'util';\r\nimport GroupForList from './Group';\r\nimport { State } from '../../redux/reducers';\r\nimport { IGroup } from '../../entity/group';\r\n\r\nconst GroupList =()=> {\r\n    const groupList = useSelector((state:State)=>{\r\n            if(state.connectedUser.value && 'groups' in state.connectedUser.value)\r\n                return (state.connectedUser.value.groups)\r\n            else\r\n                return ([])\r\n    });\r\n    //const groupsObj = useDispatch();\r\n    const [open, setOpen] = React.useState(false);\r\n    console.log(groupList)\r\n    const generateGroup = () => {\r\n        if(groupList)\r\n            return groupList.map((group: IGroup, index: number) => {\r\n                return <GroupForList group={group} index={index} />\r\n            })\r\n    }\r\n    \r\n    const addGroup = ()=>{\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <div>\r\n            <List dense>\r\n                {generateGroup()}\r\n            </List> \r\n            <Fab color=\"primary\" aria-label=\"add\" onClick={addGroup}>\r\n                <Add />\r\n            </Fab>\r\n            <AddGroupDialog open={open} handleClose={handleClose}/>\r\n        </div>\r\n        \r\n    );\r\n}\r\nexport default GroupList;","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\reducers\\index.ts",[],"C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\constants\\user.constants.ts",[],"C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\constants\\items.constants.ts",[],"C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\constants\\auth.constants.ts",[],"C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\itemList\\OwingUserForList.tsx",["180"],"import React from 'react';\r\nimport {ListItem, ListItemText, ListItemAvatar, Avatar} from '@material-ui/core';\r\nimport { IUser } from '../../entity/user';\r\nimport { IUserInGroup } from '../../redux/reducers/userInGroup.reducer';\r\n\r\nexport type T_OwingUserForListProps = {\r\n    value: {user:IUserInGroup, owing: number}\r\n    index: number;\r\n}\r\n\r\nconst OwingUserForList = (props: T_OwingUserForListProps) => {\r\n    return (\r\n        <ListItem key={props.index} button>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={`Avatar color`}\r\n                src={`/img/${props.value.user.color}.jpg`}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText primary={props.value.user.name} />\r\n            <ListItemText primary={props.value.owing} />\r\n        </ListItem>\r\n    )\r\n} \r\n\r\nexport default OwingUserForList;","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\itemList\\UserForList.tsx",["181"],"import React from 'react';\r\nimport {ListItem, ListItemText, ListItemSecondaryAction, Checkbox, IconButton, ListItemAvatar, Avatar} from '@material-ui/core';\r\nimport { IUserInGroup } from '../../redux/reducers/userInGroup.reducer';\r\ninterface I_UserForListProps{\r\n  index: number,\r\n  user : IUserInGroup,\r\n  checked: boolean,\r\n  handleToggle: (id: string)=>void\r\n}\r\nconst UserForList = (props: I_UserForListProps) => {\r\n    return (\r\n        <ListItem key={props.index} button>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={`Avatar color`}\r\n                src={`/img/${props.user.color}.jpg`}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText primary={props.user.name} />\r\n            <ListItemSecondaryAction>\r\n              <Checkbox\r\n                edge=\"end\"\r\n                onChange={()=>{props.handleToggle(props.user.id)}}\r\n                checked={props.checked}\r\n              />\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n} \r\n\r\nexport default UserForList;","C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\groupList\\AddGroupDialog.tsx",[],"C:\\Users\\Admin\\Documents\\splitzy\\src\\components\\groupList\\Group.tsx",["182","183","184","185","186","187","188","189","190"],"import React from 'react';\r\nimport {ListItem, ListItemText, ListItemSecondaryAction, Checkbox, IconButton, ListItemAvatar, Avatar} from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IGroup } from '../../entity/group';\r\nimport { group } from 'console';\r\n\r\ninterface IGroupProps {\r\n    group: IGroup;\r\n    index: number\r\n}\r\n\r\nconst GroupForList = (props: IGroupProps) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const handleDeleteItem =()=>{\r\n        //dispatch(deleteItem(props.item.id));\r\n    }\r\n    /*const deleteIcon =()=>{\r\n        if(connectedUser.id == props.item.user){\r\n            return(\r\n                <ListItemSecondaryAction>\r\n                    <IconButton aria-label=\"delete\" onClick={handleDeleteItem}>\r\n                        <Delete fontSize=\"small\" />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            )\r\n        }\r\n        return null\r\n    }*/\r\n    const groupClicked=()=>{\r\n        console.log(props.group.id);\r\n        history.push(`/items/${props.group.id}`);\r\n    }\r\n    if(props.group)\r\n        return (\r\n            <ListItem key={props.index} button onClick={groupClicked}>\r\n                <ListItemText primary={props.group.name} />\r\n                {/*deleteIcon()*/}\r\n            </ListItem>\r\n        )\r\n    return null;\r\n} \r\n\r\nexport default GroupForList;\r\n\r\n/*<Checkbox\r\n    edge=\"end\"\r\n    onChange={/*handleToggle(value)}\r\n    checked={checked.indexOf(value) !== -1}\r\n    inputProps={{ 'aria-labelledby': labelId }}\r\n/>*/","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\reducers\\userInGroup.reducer.ts",[],"C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\reducers\\items.reducer.ts",[],"C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\reducers\\connectedUser.reducer.ts",["191"],"import { IUser, User } from \"../../entity/user\";\r\nimport { authContants } from \"../constants/auth.constants\";\r\nimport { userConstants } from \"../constants/user.constants\";\r\nimport { userInGroup } from \"./userInGroup.reducer\";\r\n\r\nexport interface IConnectedUserState {\r\n    value: IUser;\r\n    requestState: string;\r\n}\r\n\r\nexport const defaultConnectedUserState: IConnectedUserState ={\r\n    value: new User({id: '', name: '', email: ''}),\r\n    requestState: 'empty'\r\n}\r\n\r\nexport const connectedUser = (state: IConnectedUserState = defaultConnectedUserState, action: any) => { \r\n    switch (action.type) {\r\n        case authContants.LOGIN_REQUEST:\r\n        case userConstants.GET_CONNECTED_USER_REQUEST:\r\n            return {\r\n                ...state,\r\n                requestState: 'requesting'\r\n            };\r\n\r\n        case authContants.LOGIN_SUCCESS:\r\n        case userConstants.GET_CONNECTED_USER_SUCCESS:{\r\n            return {\r\n                value: {...action.payload},\r\n                requestState: 'success'\r\n            };\r\n        }\r\n            \r\n\r\n        case authContants.LOGIN_FAILURE:\r\n        case userConstants.GET_CONNECTED_USER_FAILURE:\r\n            return { state, requestState:'failure' };\r\n        // case itemsConstants.ADD_ITEM_SUCCESS:\r\n        // case itemsConstants.ADD_ITEM_FAILURE:\r\n        // case itemsConstants.ADD_ITEM_REQUEST:\r\n        default:\r\n            return { ...state };\r\n    }\r\n};","C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\actions\\group.actions.ts",["192"],"import { groupsConstants } from \"../constants/group.constants\";\r\nimport { userConstants } from \"../constants/user.constants\";\r\nconst axios = require('axios').default;\r\n\r\nexport const addGroup =(group: any) =>{\r\n    const request = () => ({ type: groupsConstants.ADD_GROUP_REQUEST });\r\n\r\n    const success = (data: any) => {\r\n        return{\r\n          type: groupsConstants.ADD_GROUP_SUCCESS,\r\n          payload: data,\r\n        }\r\n    }\r\n    const failure = (response: any) => {\r\n        return{\r\n          type: groupsConstants.ADD_GROUP_FAILURE,\r\n          errors: response,\r\n        }\r\n    };\r\n\r\n    const requestURL = '/api/group';\r\n\r\n    return async (dispatch: any) => {\r\n        dispatch(request());\r\n        axios({\r\n            method: 'post',\r\n            url: '/api/group',\r\n            data: {\r\n              ...group\r\n            }\r\n        })\r\n        .then((res: { data: any; }) => {\r\n            dispatch(success(res));\r\n            dispatch({\r\n                type: userConstants.GET_CONNECTED_USER_SUCCESS,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch((res: any) =>{ \r\n            dispatch(failure(res))\r\n        });\r\n            \r\n    }\r\n}","C:\\Users\\Admin\\Documents\\splitzy\\src\\entity\\user.ts",[],"C:\\Users\\Admin\\Documents\\splitzy\\src\\redux\\constants\\group.constants.ts",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":1,"column":8,"nodeType":"199","messageId":"200","endLine":1,"endColumn":12},{"ruleId":"197","severity":1,"message":"201","line":12,"column":3,"nodeType":"199","messageId":"200","endLine":12,"endColumn":7},{"ruleId":"197","severity":1,"message":"202","line":1,"column":8,"nodeType":"199","messageId":"200","endLine":1,"endColumn":16},{"ruleId":"197","severity":1,"message":"203","line":7,"column":10,"nodeType":"199","messageId":"200","endLine":7,"endColumn":26},{"ruleId":"197","severity":1,"message":"204","line":11,"column":10,"nodeType":"199","messageId":"200","endLine":11,"endColumn":26},{"ruleId":"197","severity":1,"message":"205","line":15,"column":11,"nodeType":"199","messageId":"200","endLine":15,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":19,"column":34,"nodeType":"208","messageId":"209","endLine":19,"endColumn":36},{"ruleId":"197","severity":1,"message":"210","line":25,"column":25,"nodeType":"199","messageId":"200","endLine":25,"endColumn":37},{"ruleId":"197","severity":1,"message":"211","line":27,"column":25,"nodeType":"199","messageId":"200","endLine":27,"endColumn":30},{"ruleId":"197","severity":1,"message":"212","line":29,"column":25,"nodeType":"199","messageId":"200","endLine":29,"endColumn":35},{"ruleId":"197","severity":1,"message":"213","line":4,"column":8,"nodeType":"199","messageId":"200","endLine":4,"endColumn":15},{"ruleId":"197","severity":1,"message":"214","line":11,"column":17,"nodeType":"199","messageId":"200","endLine":11,"endColumn":24},{"ruleId":"197","severity":1,"message":"215","line":13,"column":10,"nodeType":"199","messageId":"200","endLine":13,"endColumn":21},{"ruleId":"197","severity":1,"message":"216","line":14,"column":10,"nodeType":"199","messageId":"200","endLine":14,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":24,"column":8,"nodeType":"219","endLine":24,"endColumn":10,"suggestions":"220"},{"ruleId":"197","severity":1,"message":"221","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":38,"column":19,"nodeType":"208","messageId":"209","endLine":38,"endColumn":21},{"ruleId":"206","severity":1,"message":"222","line":54,"column":23,"nodeType":"208","messageId":"209","endLine":54,"endColumn":25},{"ruleId":"206","severity":1,"message":"222","line":67,"column":39,"nodeType":"208","messageId":"209","endLine":67,"endColumn":41},{"ruleId":"197","severity":1,"message":"223","line":68,"column":11,"nodeType":"199","messageId":"200","endLine":68,"endColumn":18},{"ruleId":"206","severity":1,"message":"222","line":76,"column":34,"nodeType":"208","messageId":"209","endLine":76,"endColumn":36},{"ruleId":"224","severity":1,"message":"225","line":84,"column":38,"nodeType":"226","messageId":"227","endLine":84,"endColumn":40},{"ruleId":"206","severity":1,"message":"207","line":85,"column":19,"nodeType":"208","messageId":"209","endLine":85,"endColumn":21},{"ruleId":"206","severity":1,"message":"222","line":93,"column":70,"nodeType":"208","messageId":"209","endLine":93,"endColumn":72},{"ruleId":"206","severity":1,"message":"207","line":101,"column":19,"nodeType":"208","messageId":"209","endLine":101,"endColumn":21},{"ruleId":"197","severity":1,"message":"228","line":2,"column":58,"nodeType":"199","messageId":"200","endLine":2,"endColumn":66},{"ruleId":"197","severity":1,"message":"229","line":7,"column":10,"nodeType":"199","messageId":"200","endLine":7,"endColumn":23},{"ruleId":"206","severity":1,"message":"222","line":17,"column":90,"nodeType":"208","messageId":"209","endLine":17,"endColumn":92},{"ruleId":"206","severity":1,"message":"222","line":23,"column":29,"nodeType":"208","messageId":"209","endLine":23,"endColumn":31},{"ruleId":"206","severity":1,"message":"222","line":10,"column":68,"nodeType":"208","messageId":"209","endLine":10,"endColumn":70},{"ruleId":"224","severity":1,"message":"225","line":12,"column":66,"nodeType":"226","messageId":"227","endLine":12,"endColumn":68},{"ruleId":"206","severity":1,"message":"222","line":13,"column":68,"nodeType":"208","messageId":"209","endLine":13,"endColumn":70},{"ruleId":"197","severity":1,"message":"230","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":26},{"ruleId":"197","severity":1,"message":"231","line":1,"column":28,"nodeType":"199","messageId":"200","endLine":1,"endColumn":33},{"ruleId":"197","severity":1,"message":"232","line":2,"column":21,"nodeType":"199","messageId":"200","endLine":2,"endColumn":27},{"ruleId":"197","severity":1,"message":"221","line":4,"column":10,"nodeType":"199","messageId":"200","endLine":4,"endColumn":21},{"ruleId":"197","severity":1,"message":"213","line":6,"column":8,"nodeType":"199","messageId":"200","endLine":6,"endColumn":15},{"ruleId":"197","severity":1,"message":"233","line":8,"column":10,"nodeType":"199","messageId":"200","endLine":8,"endColumn":21},{"ruleId":"197","severity":1,"message":"234","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":15},{"ruleId":"197","severity":1,"message":"235","line":2,"column":68,"nodeType":"199","messageId":"200","endLine":2,"endColumn":78},{"ruleId":"197","severity":1,"message":"236","line":2,"column":33,"nodeType":"199","messageId":"200","endLine":2,"endColumn":56},{"ruleId":"197","severity":1,"message":"228","line":2,"column":58,"nodeType":"199","messageId":"200","endLine":2,"endColumn":66},{"ruleId":"197","severity":1,"message":"235","line":2,"column":68,"nodeType":"199","messageId":"200","endLine":2,"endColumn":78},{"ruleId":"197","severity":1,"message":"237","line":2,"column":80,"nodeType":"199","messageId":"200","endLine":2,"endColumn":94},{"ruleId":"197","severity":1,"message":"238","line":2,"column":96,"nodeType":"199","messageId":"200","endLine":2,"endColumn":102},{"ruleId":"197","severity":1,"message":"239","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":21},{"ruleId":"197","severity":1,"message":"240","line":6,"column":10,"nodeType":"199","messageId":"200","endLine":6,"endColumn":15},{"ruleId":"197","severity":1,"message":"205","line":14,"column":11,"nodeType":"199","messageId":"200","endLine":14,"endColumn":19},{"ruleId":"197","severity":1,"message":"241","line":16,"column":11,"nodeType":"199","messageId":"200","endLine":16,"endColumn":27},{"ruleId":"197","severity":1,"message":"242","line":4,"column":10,"nodeType":"199","messageId":"200","endLine":4,"endColumn":21},{"ruleId":"197","severity":1,"message":"243","line":21,"column":11,"nodeType":"199","messageId":"200","endLine":21,"endColumn":21},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'ItemList' is defined but never used.","'firebaseInstance' is defined but never used.","'getConnectedUser' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'nookies' is defined but never used.","'setUser' is assigned a value but never used.","'useLocation' is defined but never used.","'IGroup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["246"],"'useDispatch' is defined but never used.","Expected '===' and instead saw '=='.","'groupId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Checkbox' is defined but never used.","'connectedUser' is defined but never used.","'useEffect' is defined but never used.","'Props' is defined but never used.","'Button' is defined but never used.","'isUndefined' is defined but never used.","'IUser' is defined but never used.","'IconButton' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'useSelector' is defined but never used.","'group' is defined but never used.","'handleDeleteItem' is assigned a value but never used.","'userInGroup' is defined but never used.","'requestURL' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"249","text":"250"},[1060,1062],"[dispatch, match.params.id]"]