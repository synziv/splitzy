[{"/home/alexisb/Documents/projects/splitzy/src/index.tsx":"1","/home/alexisb/Documents/projects/splitzy/src/reportWebVitals.js":"2","/home/alexisb/Documents/projects/splitzy/src/App.tsx":"3","/home/alexisb/Documents/projects/splitzy/src/components/home.tsx":"4","/home/alexisb/Documents/projects/splitzy/src/components/auth/authProvider.tsx":"5","/home/alexisb/Documents/projects/splitzy/src/redux/store/index.js":"6","/home/alexisb/Documents/projects/splitzy/src/utils/firebase.ts":"7","/home/alexisb/Documents/projects/splitzy/src/redux/actions/user.actions.ts":"8","/home/alexisb/Documents/projects/splitzy/src/components/auth/login.tsx":"9","/home/alexisb/Documents/projects/splitzy/src/components/groupList/groupList.tsx":"10","/home/alexisb/Documents/projects/splitzy/src/redux/reducers/index.ts":"11","/home/alexisb/Documents/projects/splitzy/src/redux/actions/auth.actions.ts":"12","/home/alexisb/Documents/projects/splitzy/src/redux/constants/user.constants.ts":"13","/home/alexisb/Documents/projects/splitzy/src/components/groupList/addGroupDialog.tsx":"14","/home/alexisb/Documents/projects/splitzy/src/components/groupList/group.tsx":"15","/home/alexisb/Documents/projects/splitzy/src/redux/reducers/userInGroup.reducer.ts":"16","/home/alexisb/Documents/projects/splitzy/src/redux/reducers/items.reducer.ts":"17","/home/alexisb/Documents/projects/splitzy/src/redux/reducers/connectedUser.reducer.ts":"18","/home/alexisb/Documents/projects/splitzy/src/redux/constants/auth.constants.ts":"19","/home/alexisb/Documents/projects/splitzy/src/redux/actions/group.actions.ts":"20","/home/alexisb/Documents/projects/splitzy/src/redux/constants/items.constants.ts":"21","/home/alexisb/Documents/projects/splitzy/src/entity/user.ts":"22","/home/alexisb/Documents/projects/splitzy/src/redux/constants/group.constants.ts":"23"},{"size":500,"mtime":1614607729305,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1614607729309,"results":"26","hashOfConfig":"25"},{"size":594,"mtime":1614607729305,"results":"27","hashOfConfig":"25"},{"size":1662,"mtime":1614629503510,"results":"28","hashOfConfig":"25"},{"size":1366,"mtime":1614626410351,"results":"29","hashOfConfig":"25"},{"size":727,"mtime":1614607729309,"results":"30","hashOfConfig":"25"},{"size":756,"mtime":1614607729309,"results":"31","hashOfConfig":"25"},{"size":1983,"mtime":1614607729305,"results":"32","hashOfConfig":"25"},{"size":1512,"mtime":1614626866131,"results":"33","hashOfConfig":"25"},{"size":1512,"mtime":1614607729305,"results":"34","hashOfConfig":"25"},{"size":883,"mtime":1614607729305,"results":"35","hashOfConfig":"25"},{"size":1060,"mtime":1614629374427,"results":"36","hashOfConfig":"25"},{"size":406,"mtime":1614607729305,"results":"37","hashOfConfig":"25"},{"size":1980,"mtime":1614607729305,"results":"38","hashOfConfig":"25"},{"size":1319,"mtime":1614607729305,"results":"39","hashOfConfig":"25"},{"size":1230,"mtime":1614607729309,"results":"40","hashOfConfig":"25"},{"size":981,"mtime":1614607729305,"results":"41","hashOfConfig":"25"},{"size":1384,"mtime":1614607729305,"results":"42","hashOfConfig":"25"},{"size":140,"mtime":1614607729305,"results":"43","hashOfConfig":"25"},{"size":1150,"mtime":1614607729305,"results":"44","hashOfConfig":"25"},{"size":438,"mtime":1614607729305,"results":"45","hashOfConfig":"25"},{"size":637,"mtime":1614607729305,"results":"46","hashOfConfig":"25"},{"size":168,"mtime":1614607729305,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1apz8oc",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/alexisb/Documents/projects/splitzy/src/index.tsx",[],["103","104"],"/home/alexisb/Documents/projects/splitzy/src/reportWebVitals.js",[],["105","106"],"/home/alexisb/Documents/projects/splitzy/src/App.tsx",["107"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { Provider } from 'react-redux'\nimport AuthProvider from './components/auth/authProvider';\nimport store from './redux/store';\nimport Home from './components/home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Provider store={store}>\n      <AuthProvider>\n        <div className=\"container\">\n          <main>\n            <Home />\n          </main>\n        </div>\n      </AuthProvider>\n    </Provider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/home/alexisb/Documents/projects/splitzy/src/components/home.tsx",["108","109","110","111","112"],"/home/alexisb/Documents/projects/splitzy/src/components/auth/authProvider.tsx",["113","114"],"import { createContext, useState, useEffect, useContext } from 'react';\nimport 'firebase/auth';\nimport firebase from 'firebase/app';\nimport nookies from 'nookies';\n\nconst AuthContext = createContext<{ user: firebase.User | null }>({\n  user: null,\n});\n\nfunction AuthProvider({ children }: any) {\n   const [user, setUser] = useState<firebase.User | null>(null);\n\n  /*useEffect(() => {\n    return firebase.auth().onIdTokenChanged((firebaseUser) => {\n      console.log('*************connected user');\n      console.log('*************firebase user');\n      console.log(user);\n      if (!firebaseUser) {\n        setUser(null);\n        nookies.set(undefined, 'token', '');\n      } else {\n        firebaseUser.getIdToken().then((token)=>{\n          setUser(firebaseUser);\n          nookies.set(undefined, 'token', token);\n        });\n      }\n    });\n  }, []);*/\n\n   // force refresh the token every 10 minutes\n   useEffect(() => {\n     const handle = setInterval(async () => {\n       const user = firebase.auth().currentUser;\n       if (user) await user.getIdToken(true);\n     }, 10 * 60 * 1000);\n\n     // clean up setInterval\n     return () => clearInterval(handle);\n   }, []);\n\n   return (\n     <AuthContext.Provider value={{ user }}>{children}</AuthContext.Provider>\n   );\n}\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\nexport default AuthProvider;","/home/alexisb/Documents/projects/splitzy/src/redux/store/index.js",[],"/home/alexisb/Documents/projects/splitzy/src/utils/firebase.ts",[],"/home/alexisb/Documents/projects/splitzy/src/redux/actions/user.actions.ts",[],"/home/alexisb/Documents/projects/splitzy/src/components/auth/login.tsx",["115","116","117"],"import React from 'react';\nimport { Button } from '@material-ui/core';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport { firebaseInstance } from '../../utils/firebase';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/actions/auth.actions';\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const provider = new firebaseInstance.auth.FacebookAuthProvider();\n    \n    const facebookAuth = () => {\n        firebaseInstance.auth().signInWithRedirect(provider);\n    }\n\n    firebaseInstance.auth()\n                .getRedirectResult()\n                .then((result) => {\n                    if (result.credential)\n                        dispatch(login(result.credential));\n                    \n                }).catch((error) => {\n                    // Handle Errors here.\n                    var errorCode = error.code;\n                    var errorMessage = error.message;\n                    // The email of the user's account used.\n                    var email = error.email;\n                    // The firebase.auth.AuthCredential type that was used.\n                    var credential = error.credential;\n                    // ...\n                    console.log(errorCode)\n                });\n    return (\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            startIcon={<FacebookIcon />}\n            onClick={facebookAuth}\n        >Login !</Button>\n        \n    )\n}\n\nexport default Login;","/home/alexisb/Documents/projects/splitzy/src/components/groupList/groupList.tsx",["118","119","120","121","122","123"],"import React, { useEffect, Props } from 'react';\nimport { Fab, List, Button } from '@material-ui/core';\nimport {Add} from '@material-ui/icons';\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport nookies from 'nookies';\nimport AddGroupDialog from './addGroupDialog';\nimport { isUndefined } from 'util';\nimport GroupForList from './group';\nimport { State } from '../../redux/reducers';\nimport { IGroup } from '../../entity/group';\n\nconst GroupList =()=> {\n    const groupList = useSelector((state:State)=>{\n            if(state.connectedUser.value && 'groups' in state.connectedUser.value)\n                return (state.connectedUser.value.groups)\n            else\n                return ([])\n    });\n    //const groupsObj = useDispatch();\n    const [open, setOpen] = React.useState(false);\n    console.log(groupList)\n    const generateGroup = () => {\n        if(groupList)\n            return groupList.map((group: IGroup, index: number) => {\n                return <GroupForList group={group} index={index} />\n            })\n    }\n    \n    const addGroup = ()=>{\n        setOpen(true);\n    }\n    const handleClose = () => {\n        setOpen(false);\n    };\n    return (\n        <div>\n            <List dense>\n                {generateGroup()}\n            </List> \n            <Fab color=\"primary\" aria-label=\"add\" onClick={addGroup}>\n                <Add />\n            </Fab>\n            <AddGroupDialog open={open} handleClose={handleClose}/>\n        </div>\n        \n    );\n}\nexport default GroupList;","/home/alexisb/Documents/projects/splitzy/src/redux/reducers/index.ts",[],"/home/alexisb/Documents/projects/splitzy/src/redux/actions/auth.actions.ts",[],"/home/alexisb/Documents/projects/splitzy/src/redux/constants/user.constants.ts",[],"/home/alexisb/Documents/projects/splitzy/src/components/groupList/addGroupDialog.tsx",[],"/home/alexisb/Documents/projects/splitzy/src/components/groupList/group.tsx",["124","125","126","127","128","129","130","131"],"import React from 'react';\nimport {ListItem, ListItemText, ListItemSecondaryAction, Checkbox, IconButton, ListItemAvatar, Avatar} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IGroup } from '../../entity/group';\n\ninterface IGroupProps {\n    group: IGroup;\n    index: number\n}\n\nconst GroupForList = (props: IGroupProps) => {\n    const dispatch = useDispatch();\n    const handleDeleteItem =()=>{\n        //dispatch(deleteItem(props.item.id));\n    }\n    /*const deleteIcon =()=>{\n        if(connectedUser.id == props.item.user){\n            return(\n                <ListItemSecondaryAction>\n                    <IconButton aria-label=\"delete\" onClick={handleDeleteItem}>\n                        <Delete fontSize=\"small\" />\n                    </IconButton>\n                </ListItemSecondaryAction>\n            )\n        }\n        return null\n    }*/\n    if(props.group)\n        return (\n            <ListItem key={props.index} button>\n                <ListItemText primary={props.group.name} />\n                {/*deleteIcon()*/}\n            </ListItem>\n        )\n    return null;\n} \n\nexport default GroupForList;\n\n/*<Checkbox\n    edge=\"end\"\n    onChange={/*handleToggle(value)}\n    checked={checked.indexOf(value) !== -1}\n    inputProps={{ 'aria-labelledby': labelId }}\n/>*/","/home/alexisb/Documents/projects/splitzy/src/redux/reducers/userInGroup.reducer.ts",[],"/home/alexisb/Documents/projects/splitzy/src/redux/reducers/items.reducer.ts",[],"/home/alexisb/Documents/projects/splitzy/src/redux/reducers/connectedUser.reducer.ts",["132"],"import { IUser, User } from \"../../entity/user\";\nimport { authContants } from \"../constants/auth.constants\";\nimport { userConstants } from \"../constants/user.constants\";\nimport { userInGroup } from \"./userInGroup.reducer\";\n\nexport interface IConnectedUserState {\n    value: IUser;\n    requestState: string;\n}\n\nexport const defaultConnectedUserState: IConnectedUserState ={\n    value: new User({id: '', name: '', email: ''}),\n    requestState: 'empty'\n}\n\nexport const connectedUser = (state: IConnectedUserState = defaultConnectedUserState, action: any) => { \n    switch (action.type) {\n        case authContants.LOGIN_REQUEST:\n        case userConstants.GET_CONNECTED_USER_REQUEST:\n            return {\n                ...state,\n                requestState: 'requesting'\n            };\n\n        case authContants.LOGIN_SUCCESS:\n        case userConstants.GET_CONNECTED_USER_SUCCESS:{\n            return {\n                value: {...action.payload},\n                requestState: 'success'\n            };\n        }\n            \n\n        case authContants.LOGIN_FAILURE:\n        case userConstants.GET_CONNECTED_USER_FAILURE:\n            return { state, requestState:'failure' };\n        // case itemsConstants.ADD_ITEM_SUCCESS:\n        // case itemsConstants.ADD_ITEM_FAILURE:\n        // case itemsConstants.ADD_ITEM_REQUEST:\n        default:\n            return { ...state };\n    }\n};","/home/alexisb/Documents/projects/splitzy/src/redux/constants/auth.constants.ts",[],"/home/alexisb/Documents/projects/splitzy/src/redux/actions/group.actions.ts",["133"],"import { groupsConstants } from \"../constants/group.constants\";\nimport { userConstants } from \"../constants/user.constants\";\nconst axios = require('axios').default;\n\nexport const addGroup =(group: any) =>{\n    const request = () => ({ type: groupsConstants.ADD_GROUP_REQUEST });\n\n    const success = (data: any) => {\n        return{\n          type: groupsConstants.ADD_GROUP_SUCCESS,\n          payload: data,\n        }\n    }\n    const failure = (response: any) => {\n        return{\n          type: groupsConstants.ADD_GROUP_FAILURE,\n          errors: response,\n        }\n    };\n\n    const requestURL = '/api/group';\n\n    return async (dispatch: any) => {\n        dispatch(request());\n        axios({\n            method: 'post',\n            url: '/api/group',\n            data: {\n              ...group\n            }\n        })\n        .then((res: { data: any; }) => {\n            dispatch(success(res));\n            dispatch({\n                type: userConstants.GET_CONNECTED_USER_SUCCESS,\n                payload: res.data,\n            })\n        })\n        .catch((res: any) =>{ \n            dispatch(failure(res))\n        });\n            \n    }\n}","/home/alexisb/Documents/projects/splitzy/src/redux/constants/items.constants.ts",[],"/home/alexisb/Documents/projects/splitzy/src/entity/user.ts",[],"/home/alexisb/Documents/projects/splitzy/src/redux/constants/group.constants.ts",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":12},{"ruleId":"138","severity":1,"message":"142","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":16},{"ruleId":"138","severity":1,"message":"143","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":26},{"ruleId":"138","severity":1,"message":"144","line":11,"column":10,"nodeType":"140","messageId":"141","endLine":11,"endColumn":26},{"ruleId":"138","severity":1,"message":"145","line":15,"column":11,"nodeType":"140","messageId":"141","endLine":15,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":19,"column":34,"nodeType":"148","messageId":"149","endLine":19,"endColumn":36},{"ruleId":"138","severity":1,"message":"150","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":15},{"ruleId":"138","severity":1,"message":"151","line":11,"column":17,"nodeType":"140","messageId":"141","endLine":11,"endColumn":24},{"ruleId":"138","severity":1,"message":"152","line":25,"column":25,"nodeType":"140","messageId":"141","endLine":25,"endColumn":37},{"ruleId":"138","severity":1,"message":"153","line":27,"column":25,"nodeType":"140","messageId":"141","endLine":27,"endColumn":30},{"ruleId":"138","severity":1,"message":"154","line":29,"column":25,"nodeType":"140","messageId":"141","endLine":29,"endColumn":35},{"ruleId":"138","severity":1,"message":"155","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"156","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":33},{"ruleId":"138","severity":1,"message":"157","line":2,"column":21,"nodeType":"140","messageId":"141","endLine":2,"endColumn":27},{"ruleId":"138","severity":1,"message":"158","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":21},{"ruleId":"138","severity":1,"message":"150","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":15},{"ruleId":"138","severity":1,"message":"159","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":21},{"ruleId":"138","severity":1,"message":"160","line":2,"column":33,"nodeType":"140","messageId":"141","endLine":2,"endColumn":56},{"ruleId":"138","severity":1,"message":"161","line":2,"column":58,"nodeType":"140","messageId":"141","endLine":2,"endColumn":66},{"ruleId":"138","severity":1,"message":"162","line":2,"column":68,"nodeType":"140","messageId":"141","endLine":2,"endColumn":78},{"ruleId":"138","severity":1,"message":"163","line":2,"column":80,"nodeType":"140","messageId":"141","endLine":2,"endColumn":94},{"ruleId":"138","severity":1,"message":"164","line":2,"column":96,"nodeType":"140","messageId":"141","endLine":2,"endColumn":102},{"ruleId":"138","severity":1,"message":"165","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":21},{"ruleId":"138","severity":1,"message":"145","line":12,"column":11,"nodeType":"140","messageId":"141","endLine":12,"endColumn":19},{"ruleId":"138","severity":1,"message":"166","line":13,"column":11,"nodeType":"140","messageId":"141","endLine":13,"endColumn":27},{"ruleId":"138","severity":1,"message":"167","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":21},{"ruleId":"138","severity":1,"message":"168","line":21,"column":11,"nodeType":"140","messageId":"141","endLine":21,"endColumn":21},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ItemList' is defined but never used.","'firebaseInstance' is defined but never used.","'getConnectedUser' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'nookies' is defined but never used.","'setUser' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'useEffect' is defined but never used.","'Props' is defined but never used.","'Button' is defined but never used.","'useDispatch' is defined but never used.","'isUndefined' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'Checkbox' is defined but never used.","'IconButton' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'useSelector' is defined but never used.","'handleDeleteItem' is assigned a value but never used.","'userInGroup' is defined but never used.","'requestURL' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]